<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Button4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rcR1SAKAAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="Button3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QCORXhpZgAATU0AKgAAAAgAAgESAAMAAAABAAEAAIdpAAQAAAAB
        AAAAJgAAAAAABJADAAIAAAAUAAAAXJAEAAIAAAAUAAAAcJKRAAIAAAADMDAAAJKSAAIAAAADMDAAAAAA
        AAAyMDIzOjAyOjIwIDAxOjU4OjQ2ADIwMjM6MDI6MjAgMDE6NTg6NDYAAAD/2wBDAAYEBQYFBAYGBQYH
        BwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcH
        BwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo
        KCj/wAARCAAkACQDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAA
        AgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRol
        JicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZ
        mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QA
        HwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
        BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RV
        VldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPE
        xcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD2XwvZxpYw6fpqR2lp
        aoqRxxxqBjH0rpF0SRlz9sk/75B/pXPeF5BHJLnoSKzvjP8AEu18CeEZpkcPq1yPKtIged2OWPoAP1xQ
        B1NxprxrlLwsPop/pWNdyXERIE2fYqOf0r5v+Afxdm07WrzTPFF272mozGZJpGJEUh4IPoDx9Me9fReo
        S78leh565oGj5x8baTZal4lvLi4s4WlL4J2dcUVoeI3iGuXmQ3+sP86KBnuWn3HlO3bOK4b4+adpt98P
        tY1K4tFkv7eKMRTEnKZkQcDOOldT5v7wlTxgHisnxhpaeJfDd7pEkxhS5VQZABkYYH+lArHzt+z9pmn6
        x42mt9Vto7iEWruFckDcCMHivqaR1SFYkGFRQoGc8AeteY/D/wCGlt4N1o6hBfyzsYmiKuB3I9vavQWf
        PQ0AjxnxI3/E8vP+uhoqLxAwbWrs7hzIe9FAzL8P65qVxo9vNLdymRkBJ3VttqV79lVvtc+T/tmiigCA
        6pf/APP5P/32aa2qX3e7mP1aiigXU9Q8IeENH1Hw9aXV3b+ZPImWYnqaKKKBn//Z
</value>
  </data>
</root>